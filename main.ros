#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '() :silent t)
  )

(defpackage :todo
  (:use :cl))
(in-package :todo)

(defun printline (string)
  (prin1 string) (terpri))

(defstruct todo-item
  (name "" :type string)
  (description "" :type string)
  (due-date 0 :type integer))

(defparameter *todos*
  (list (make-todo-item :name "foo")
        (make-todo-item :name "bar")))

(defun remove-nth (n list)
  (declare
    (type (integer 0) n)
    (type list list))
  (if (or (zerop n) (null list))
    (cdr list)
    (cons (car list) (remove-nth (1- n) (cdr list)))))

(defun index-of-todo (item)
  (position item *todos* :test #'equal))

;; Public API
(defun list-todos (&rest argv)
  (declare (ignorable argv))
  (mapcar (lambda (x) (printline x) x) *todos*))

;; TODO Handle default values for description and due-date
(defun add-todo (name &key description due-date)
  (setq *todos* (cons (make-todo-item :name name)
                 *todos*)))

(defun remove-todo (index)
  (setq *todos*
        (remove-nth index *todos*)))
